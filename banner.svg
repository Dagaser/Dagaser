<svg viewBox="0 0 800 250" xmlns="http://www.w3.org/2000/svg">
  <!-- Definiciones de patrones y estilos -->
  <defs>
    <!-- Estilo común para textos con tipografía antigua de máquina de escribir -->
    <style>
      .typewriter { font-family: monospace; font-variant-ligatures: none; }
      .binary { fill: #ffffff80; font-size: 34px; }
      .python { fill: #ffffff40; font-size: 16px; }
      .info { fill: #306998; }
      .white-text { fill: white; }
    </style>
    
    <!-- Binary code pattern -->
    <pattern id="binaryPattern" x="0" y="0" width="600" height="250" patternUnits="userSpaceOnUse">
      <g class="typewriter binary">
        <text x="20" y="50">01001101</text>
        <text x="20" y="110">01010000</text>
        <text x="20" y="170">01000010</text>
        <text x="240" y="50">01100001</text>
        <text x="240" y="110">01111001</text>
        <text x="240" y="170">01100001</text>
        <text x="460" y="50">01001111</text>
        <text x="460" y="110">01010100</text>
        <text x="460" y="170">01001000</text>
      </g>
    </pattern>
    
    <!-- Python code pattern -->
    <pattern id="pythonPattern" x="0" y="0" width="500" height="250" patternUnits="userSpaceOnUse">
      <g class="typewriter python">
        <text x="100" y="35">def connect_database():</text>
        <text x="120" y="55">    return Database(config)</text>
        <text x="100" y="85">class APIHandler:</text>
        <text x="120" y="105">    def __init__(self):</text>
        <text x="140" y="125">        self.db = connect_database()</text>
        <text x="100" y="155">if __name__ == "__main__":</text>
        <text x="120" y="175">    api = APIHandler()</text>
        <text x="120" y="195">    api.run()</text>
        <text x="280" y="35">def process_data(data):</text>
        <text x="300" y="55">    result = []</text>
        <text x="300" y="75">    for item in data:</text>
        <text x="320" y="95">        if validate(item):</text>
        <text x="340" y="115">            result.append(transform(item))</text>
        <text x="300" y="135">    return result</text>
        <text x="280" y="165">@app.route("/api/v1/data")</text>
        <text x="280" y="185">async def get_data():</text>
        <text x="300" y="205">    return jsonify(process_data(data))</text>
      </g>
    </pattern>
    
    <!-- Clip path para límites -->
    <clipPath id="cardBounds">
      <rect x="20" y="20" width="760" height="250" rx="5" ry="5" />
    </clipPath>
  </defs>
  
  <!-- Background yellow card (static) -->
  <rect x="20" y="20" width="760" height="250" fill="#FFD43B" rx="5" ry="5" />
  
  <!-- Personal Information on yellow background (siempre visible) -->
  <g class="typewriter info">
    <text x="40" y="120" font-size="36" font-weight="bold">DANIEL GARCIA SERNA.</text>
    <text x="40" y="185" font-size="14">Python | FastAPI | Django | SQL | Docker</text>
  </g>
  
  <!-- Blue sliding card group -->
  <g id="slidingCard" clip-path="url(#cardBounds)">
    <!-- Blue background with animation -->
    <rect width="760" height="250" fill="#306998" rx="5" ry="5">
      <animate 
        attributeName="x" 
        values="20;780;780;20;20" 
        dur="10s" 
        repeatCount="indefinite" 
        begin="0s" 
        keyTimes="0;0.3;0.7;0.9;1" 
        keySplines="0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1" 
        calcMode="spline" 
      />
    </rect>
    
    <!-- Code patterns overlay with animations -->
    <rect width="760" height="250" fill="url(#binaryPattern)">
      <animate 
        attributeName="x" 
        values="20;780;780;20;20" 
        dur="10s" 
        repeatCount="indefinite" 
        begin="0s" 
        keyTimes="0;0.3;0.7;0.9;1" 
        keySplines="0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1" 
        calcMode="spline" 
      />
    </rect>
      <rect width="760" height="250" fill="url(#pythonPattern)">
      <animate 
        attributeName="x" 
        values="20;780;780;20;20" 
        dur="10s" 
        repeatCount="indefinite" 
        begin="0s" 
        keyTimes="0;0.3;0.7;0.9;1" 
        keySplines="0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1" 
        calcMode="spline" 
      />
    </rect>
    
    <!-- Title on blue card that slides -->
    <text y="130" class="typewriter white-text" font-size="34" font-weight="bold" text-anchor="left">
      Backend Developer.
      <animate 
        attributeName="x" 
        values="50;810;810;50;50" 
        dur="10s" 
        repeatCount="indefinite" 
        begin="0s" 
        keyTimes="0;0.3;0.7;0.9;1" 
        keySplines="0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1;0.42 0 0.58 1" 
        calcMode="spline" 
      />
    </text>
  </g>
</svg>
